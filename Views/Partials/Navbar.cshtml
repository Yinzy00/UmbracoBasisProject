@using NetVips
@using UmbNav.Core.Extensions
@using UmbNav.Core.Models
@using Umbraco.Cms.Core.Models
@using Umbraco.Core;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    HomePage rootModel = (Model.AncestorOrSelf<HomePage>());
}
@if (rootModel.Navbar.Count() != 0 || rootModel.Logo != null)
{
    <header class="header-area header-sticky">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <nav class="main-nav">
                        <!-- ***** Logo Start ***** -->
                    <a href="@rootModel.Url()" class="logo">
                            @{
                                var img = rootModel.Logo;
                                if (img != null)
                                {
                                    <img src="@img.MediaUrl()" alt="@(!string.IsNullOrEmpty(rootModel.LogoImageAlt) ? rootModel.LogoImageAlt : "")" />
                                }
                            }
                        </a>
                        <!-- ***** Logo End ***** -->
                        <!-- ***** Menu Start ***** -->
                    <ul class="nav">
                            @*@navBar*@
                            @{
                                foreach (UmbNavItem item in rootModel.Navbar)
                                {
                                    <li>
                                        <a class="nav-item" href="@item.Url()">@item.Title</a>
                                    </li>
                                }
                            }
                            @{
                                if (rootModel.Cultures.Count > 1)
                                {
                                    <li class="nav-item dropdown">
                                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false" style="padding:0px!important;">
                                          @System.Threading.Thread.CurrentThread.CurrentCulture.DisplayName
                                        </a>
                                        <div class="dropdown-menu">
                                            @foreach (var culture in Model.Cultures)
                                            {
                                                var Url = Model.Url(culture.Key.Split('-')[0] + "-" + culture.Key.Split('-')[1].ToUpper());
                                                <a class="dropdown-item" href="@Url">@culture.Key</a> 
                                            }
                                        </div>
                                    </li>
                                }
                            }
                        </ul>
                        <a class='menu-trigger'>
                            <span>Menu</span>
                        </a>
                        <!-- ***** Menu End ***** -->
                </nav>
                </div>
            </div>
        </div>
    </header>
}